!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/forms"),require("@angular/material"),require("@angular/material/input"),require("@angular/material/form-field"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/forms","@angular/material","@angular/material/input","@angular/material/form-field","@angular/common"],e):e(t["angular-form-builder"]={},t.ng.core,t.ng.forms,t.ng.material,t.ng.material.input,t.ng.material["form-field"],t.ng.common)}(this,function(t,e,o,n,r,a,i){"use strict";var u=function(){function t(){this.validators={email:function(){return o.Validators.email},required:function(){return o.Validators.required},min:function(t){return o.Validators.min(t)},max:function(t){return o.Validators.max(t)},pattern:function(t){return o.Validators.pattern(t)},minLength:function(t){return o.Validators.minLength(t)},maxLength:function(t){return o.Validators.maxLength(t)}}}return t.prototype.toFormGroup=function(t){var e=this,n={};return t.forEach(function(t){return"checkboxGroup"==t.controlType?n[t.key]=e.createFormGroup(t):n[t.key]=e.createFormControl(t)}),new o.FormGroup(n)},t.prototype.createFormControl=function(t){var e,n={value:t.value||"",disabled:t.disabled};return t.validators&&(e=this.getValidators(t.validators)),new o.FormControl(n,e)},t.prototype.createFormGroup=function(t){var e=this,n={};return t.options.forEach(function(o){var r={key:o.key,value:o.value,disabled:t.disabled,validators:t.validators};n[o.key]=e.createFormControl(r)}),new o.FormGroup(n)},t.prototype.getValidators=function(t){var e=this,o=new Array;return Object.keys(t).forEach(function(n){t[n]&&o.push(e.validators[n](t[n]))}),o},t}();u.decorators=[{type:e.Injectable}],u.ctorParameters=function(){return[]};var s=function(){function t(t){this.qcs=t,this.questions=[],this.disableButtons=!1,this.formSubmit=new e.EventEmitter,this.formReset=new e.EventEmitter}return t.prototype.ngOnInit=function(){this.form=this.qcs.toFormGroup(this.questions)},t.prototype.onReset=function(){this.form.reset(),this.form=this.qcs.toFormGroup(this.questions),this.formReset.emit(this.form)},t}();s.decorators=[{type:e.Component,args:[{selector:"angular-form-builder",template:'<mat-card>\n  <mat-card-header>\n    <mat-card-title>\n      <b>{{title}}</b>\n    </mat-card-title>\n  </mat-card-header>\n  <form (ngSubmit)="formSubmit.emit(form)" [formGroup]="form">\n    <mat-card-content>\n      <div *ngFor="let question of questions">\n        <app-question [question]="question" [form]="form"></app-question>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button id=submit type="submit" mat-button [disabled]="!form.valid || disableButtons">SAVE</button>\n      <button [disabled]="disableButtons" type="button" mat-button (click)="onReset()">RESET</button>\n      <ng-content></ng-content>\n    </mat-card-actions>\n  </form>\n</mat-card>',providers:[u]}]}],s.ctorParameters=function(){return[{type:u}]},s.propDecorators={title:[{type:e.Input}],questions:[{type:e.Input}],disableButtons:[{type:e.Input}],formSubmit:[{type:e.Output}],formReset:[{type:e.Output}]};var l=function(){function t(t){this.qcs=t,this.questions=[]}return t.prototype.ngOnInit=function(){this.questions.forEach(function(t){t.disabled=!0,t.hintLabel=null}),this.form=this.qcs.toFormGroup(this.questions)},t}();l.decorators=[{type:e.Component,args:[{selector:"angular-form-viewer",template:'<div *ngFor="let question of questions">\n    <app-question [question]="question" [form]="form"></app-question>\n</div>',providers:[u]}]}],l.ctorParameters=function(){return[{type:u}]},l.propDecorators={questions:[{type:e.Input}]};var m=function(){};m.decorators=[{type:e.Component,args:[{selector:"app-question",template:'<div [formGroup]="form">\n  <div [ngSwitch]="question.controlType">\n    \x3c!-- Input field --\x3e\n    <div *ngSwitchCase="\'input\'">\n      <mat-form-field [hintLabel]="question.hintLabel" class="full-width">\n        <input matInput [formControlName]="question.key" [id]="question.key" [type]="question.dataType" [placeholder]="question.label">\n      </mat-form-field>\n    </div>\n    \x3c!-- Radio button --\x3e\n    <div class="padding" *ngSwitchCase="\'radio\'">\n      <label>{{question.label}}</label>\n      <mat-radio-group [formControlName]="question.key">\n        <mat-radio-button *ngFor="let option of question.options " color="primary" class="side-margin" [value]="option.key">{{option.value}}</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    \x3c!-- Checkboxes --\x3e\n    <div *ngSwitchCase="\'checkbox\'">\n      <mat-checkbox class="side-margin" [formControlName]="question.key" [(ngModel)]="question.value">{{question.label}}</mat-checkbox>\n    </div>\n    \x3c!-- Dropdown --\x3e\n    <mat-form-field *ngSwitchCase="\'select\'">\n      <mat-select [id]="question.key" [placeholder]="question.label" [formControlName]="question.key" [ngModel]="question.value">\n        <mat-option *ngFor="let option of question.options" [value]="option.key">\n          {{ option.value }}\n        </mat-option>\n      </mat-select>\n      <mat-hint>{{question.hintLabel }}</mat-hint>\n    </mat-form-field>\n    \x3c!-- Checkbox group --\x3e\n    <div [formGroupName]="question.key" *ngSwitchCase="\'checkboxGroup\'">\n      <div class="container">\n        <label>{{question.label}}</label>\n        <div *ngFor="let option of question.options" flex="20">\n          <mat-checkbox class="side-margin" [formControlName]="option.key" [(ngModel)]=option.value>{{option.label}}</mat-checkbox>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',styles:[".full-width {\n        width: 100%\n      }\n      .side-margin {\n        margin: 0 10px;\n      }\n      .padding {\n        padding-bottom: 1.25em;\n      }\n      .container {\n        display: flex;\n      }\n      "]}]}],m.ctorParameters=function(){return[]},m.propDecorators={question:[{type:e.Input}],form:[{type:e.Input}]};var d=function(){};d.decorators=[{type:e.NgModule,args:[{imports:[n.MatButtonModule,n.MatCheckboxModule,n.MatCardModule,r.MatInputModule,a.MatFormFieldModule,n.MatRadioModule,n.MatSelectModule],exports:[n.MatButtonModule,n.MatCheckboxModule,n.MatCardModule,r.MatInputModule,a.MatFormFieldModule,n.MatRadioModule,n.MatSelectModule]}]}],d.ctorParameters=function(){return[]};var c=function(){};c.decorators=[{type:e.NgModule,args:[{imports:[i.CommonModule,o.ReactiveFormsModule,d],declarations:[s,m,l],exports:[s,l]}]}],c.ctorParameters=function(){return[]},t.FormBuilderModule=c,t.ɵa=d,t.ɵb=s,t.ɵe=l,t.ɵd=m,t.ɵc=u,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=angular-form-builder.umd.min.js.map
